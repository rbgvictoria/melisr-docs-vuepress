(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{219:function(t,s,a){t.exports=a.p+"assets/img/record-level-terms-2020-10-14-132111.038ff996.jpg"},220:function(t,s,a){t.exports=a.p+"assets/img/occurrence-2020-10-14-131513.cc1ffdb5.jpg"},221:function(t,s,a){t.exports=a.p+"assets/img/event-2020-10-21-104508.4325590a.jpg"},222:function(t,s,a){t.exports=a.p+"assets/img/location-2020-10-14-133141.d95ebf51.jpg"},223:function(t,s,a){t.exports=a.p+"assets/img/georeference-2020-10-14-133324.88bc41b3.jpg"},224:function(t,s,a){t.exports=a.p+"assets/img/identification-2020-10-14-133512.05ea401e.jpg"},225:function(t,s,a){t.exports=a.p+"assets/img/taxon-2020-10-14-133713.52fc3969.jpg"},578:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"specify-to-darwin-core-mapping"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#specify-to-darwin-core-mapping","aria-hidden":"true"}},[t._v("#")]),t._v(" Specify to Darwin Core mapping")]),t._v(" "),n("p",[t._v("The National Herbarium of Victoria (MEL), like other Australian herbaria, used\nto deliver data to the Australasian Virtual Herbarium (AVH) as ABCD 2.06 through\na BioCASe provider. The table structure that fed the BioCASe provider was\ncreated using a PHP application that has become very hard to maintain.")]),t._v(" "),n("p",[t._v("The Atlas of Living Australia (ALA), which has been hosting the AVH since 2012,\nhas never accepted ABCD, so for the last eight years MEL has been harvesting the\nBioCASe providers of other Australian herbaria as well and has been transforming\nABCD to Darwin Core, which was then delivered as deltas in Darwin Core Archives\nto ALA.")]),t._v(" "),n("p",[t._v("When the deltas became a problem for ALA – or we finally realised they were a\nproblem – MEL has started weekly delivery of the full AVH data set of 5M records\nto ALA through the GBIF Integrated Publishing Toolkit (IPT). At that time, early\n2019, it was decided that we would phase out the BioCASe providers and that all\nAustralian herbaria should prepare to deliver their own data as Darwin Core\nArchives directly to ALA.")]),t._v(" "),n("p",[t._v("The biggest barrier for MEL to export data from our collections database\ndirectly as Darwin Core was that the MEL AVH data set in ALA also contained the\ndata that was harvested from other Australian herbaria's BioCASe providers and\nthat some herbaria will keep depending on MEL harvesting their BioCASe providers\nlonger than others. So we have had a Darwin Core mapping for over a year without\nbeing able to use it.")]),t._v(" "),n("p",[t._v("Over the first half of 2020 the MEL AVH data resource in ALA was split into\nindividual data resources for each herbarium (which was not nearly as easy as it\nsounds). This opened the way for MEL to start exporting data from its Specify\ndatabase directly as Darwin Core into an IPT using the Schema Mapper and Data\nExporter tool that are available in Specify.")]),t._v(" "),n("h2",{attrs:{id:"preparing-the-schema"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#preparing-the-schema","aria-hidden":"true"}},[t._v("#")]),t._v(" Preparing the schema")]),t._v(" "),n("p",[t._v("Because Darwin Core has been updated since we first set up our database about\nten years ago, I had to import the latest Darwin Core Schema. The Darwin Core\nschema is missing the record level terms that are borrowed from Dublin Core. We\nonly need "),n("code",[t._v("modified")]),t._v(", as the other Dublin Core terms that we use have standard\nvalues for the entire data set.")]),t._v(" "),n("p",[t._v("I added "),n("code",[t._v("modified")]),t._v(" to the schema like so:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" spexportschemaitem "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TimestampCreated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimestampModified"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    CreatedByAgentID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DataType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FieldName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SpExportSchemaID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xs:dateTimeIso'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'modified'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("Also, the collecting date is stored in Specify as "),n("code",[t._v("StartDate")]),t._v(" and "),n("code",[t._v("EndDate")]),t._v(",\nthe Darwin Core "),n("code",[t._v("eventDate")]),t._v(" is an ISO 8601 date string with the start and end\ndate separated by a slash ('/'). Therefore, if there is an end date (I\ndiscovered that almost 4,000 of our records have one), it can not be mapped\ncorrectly to "),n("code",[t._v("eventDate")]),t._v('. I have "resolved" this by adding '),n("code",[t._v("eventDateStart")]),t._v("\nand "),n("code",[t._v("eventDateEnd")]),t._v(" to the schema.")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" spexportschemaitem "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TimestampCreated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimestampModified"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    CreatedByAgentID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DataType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FieldName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SpExportSchemaID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xs:dateTimeIso'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eventDateStart'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xs:dateTimeIso'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eventDateEnd'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("eventDateStart")]),t._v(" and "),n("code",[t._v("eventDateEnd")]),t._v(" will be concatenated into "),n("code",[t._v("eventDate")]),t._v(" in the\nquery that feeds the IPT.")]),t._v(" "),n("h2",{attrs:{id:"pre-processing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pre-processing","aria-hidden":"true"}},[t._v("#")]),t._v(" Pre-processing")]),t._v(" "),n("p",[t._v("For many terms there is no straight mapping from the Specify data model – or\nat least the implementation at the National Herbarium of Victoria – to Darwin\nCore terms, so some pre-processing of data is necessary.")]),t._v(" "),n("p",[t._v("I have tried to do this as much as possible in SQL, which can be stored in the\ndatabase as functions and stored procedures, but for some of the "),n("strong",[t._v("Location")]),t._v("\nterms the processing needed went beyond what I can do in MySQL, so I have\nused a bit of Python as well.")]),t._v(" "),n("h3",{attrs:{id:"record-level-terms"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#record-level-terms","aria-hidden":"true"}},[t._v("#")]),t._v(" Record Level Terms")]),t._v(" "),n("p",[n("img",{attrs:{src:a(219),alt:"DwC mapping Record Level Terms"}})]),t._v(" "),n("h3",{attrs:{id:"occurrence"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#occurrence","aria-hidden":"true"}},[t._v("#")]),t._v(" Occurrence")]),t._v(" "),n("p",[n("img",{attrs:{src:"/specify-icon-18px.png",alt:""}}),t._v(" "),n("a",{attrs:{href:"https://data.rbg.vic.gov.au/specify/specifyschema/table/collectionobject",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("Collection Object")]),n("OutboundLink")],1)]),t._v(" "),n("p",[n("img",{attrs:{src:a(220),alt:"DwC mapping Occurrence"}})]),t._v(" "),n("h4",{attrs:{id:"reproductivecondition"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reproductivecondition","aria-hidden":"true"}},[t._v("#")]),t._v(" reproductiveCondition")]),t._v(" "),n("p",[t._v('We map what we call "Phenology" in the herbarium community to\n'),n("code",[t._v("reproductiveCondition")]),t._v(" in Darwin Core, which is not ideal but the best we can\ndo at the moment. Phenology in the herbarium world is mainly the presence of\ncertain reproductive structures on specimens. We use five fields in the\n"),n("a",{attrs:{href:"https://data.rbg.vic.gov.au/specify/specifyschema/table/collectionobject",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("Collection Object Attribute")]),n("OutboundLink")],1),t._v("\ntable to record a selection of terms from the\n"),n("a",{attrs:{href:"https://hiscom.github.io/hispid/vocabulary/reproductive_condition.xml",target:"_blank",rel:"noopener noreferrer"}},[t._v("HISPID vocabulary"),n("OutboundLink")],1),t._v(":\nflowers, fruit, buds, fertile and sterile. These values need to be concatenated\ninto a string.")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_collection_object_id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" utf8\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" var_flower "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" var_fruit "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" var_buds "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" var_fertile "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" var_sterile "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" out_reproductive_condition "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" coa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text13"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" coa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text14"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" coa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text15"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" coa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text17"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" coa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text18\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" var_flower"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_fruit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_buds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_fertile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_sterile\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" collectionobjectattribute coa\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" collectionobject co "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" coa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectAttributeID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectAttributeID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("in_collection_object_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_flower"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" var_fruit"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" var_buds"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_flower"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flowers'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_fruit"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" out_reproductive_condition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_reproductive_condition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CONCAT_WS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fruit'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" \n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_reproductive_condition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fruit'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_buds"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" out_reproductive_condition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_reproductive_condition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CONCAT_WS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'buds'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" \n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_reproductive_condition "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'buds'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSEIF")]),t._v(" var_fertile"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" var_sterile"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" \n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_fertile"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fertile'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSEIF")]),t._v(" var_sterile"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sterile'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" out_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("The resulting value is stored in the "),n("code",[t._v("Text28")]),t._v(" field in the "),n("strong",[t._v("Collection Object\nAttribute")]),t._v(" table.")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" collectionobjectattribute coa\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" collectionobject co "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" coa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectAttributeID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectAttributeID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" coa"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text28"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dwc_reproductive_condition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"establishmentmeans"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#establishmentmeans","aria-hidden":"true"}},[t._v("#")]),t._v(" establishmentMeans")]),t._v(" "),n("p",[t._v("We still record what is called "),n("code",[t._v("establishmentMeans")]),t._v(" in Darwin Core in the way\nHISPID used to recommend and have two fields, "),n("strong",[t._v("Introduced status")]),t._v(" ("),n("code",[t._v("Text11")]),t._v(")\nand "),n("strong",[t._v("Cultivated status")]),t._v(" ("),n("code",[t._v("Text13")]),t._v("), in the\n"),n("a",{attrs:{href:"https://data.rbg.vic.gov.au/specify/specifyschema/table/collectingeventattribute",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("Collecting Event Attribute")]),n("OutboundLink")],1),t._v("\ntable. We should probably adopt the Darwin Core recommendation, as that is what\nwe do in our flora, but for now we need to convert the content of the two fields\nwe have to the correct Darwin Core "),n("code",[t._v("establishmentMeans")]),t._v(" values. The following\nfunction does just that:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_establishment_means"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_establishment_means"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_collection_object_id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" utf8\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_introduced "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_cultivated "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" out_establishment_means "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" cea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text11"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text13\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" var_introduced"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_cultivated\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" collectionobject co\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" collectingevent ce "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" CollectingEventID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ce"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" collectingeventattribute cea "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" ce"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventAttributeID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventAttributeID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("in_collection_object_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_establishment_means "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_introduced "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Native'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_establishment_means "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'native'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_introduced "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Not native'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_establishment_means "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'introduced'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_cultivated"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cultivated'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_establishment_means "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cultivated'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" out_establishment_means"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("The resulting value is stored in "),n("code",[t._v("Text7")]),t._v(" in the "),n("strong",[t._v("Collecting Event Attribute")]),t._v("\ntable.")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_establishment_means"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_establishment_means"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" collectingeventattribute cea\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" collectingevent ce "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" cea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventAttributeID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ce"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventAttributeID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" collectionobject co "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" ce"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" cea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text7"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" collectingeventattribute cea\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" collectingevent ce "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" cea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventAttributeID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ce"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventAttributeID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" collectionobject co "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" ce"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectingEventID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" cea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text7"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dwc_establishment_means"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" co"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text11 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" cea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text13 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"event"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event","aria-hidden":"true"}},[t._v("#")]),t._v(" Event")]),t._v(" "),n("p",[n("img",{attrs:{src:"/specify-icon-18px.png",alt:""}}),t._v(" "),n("a",{attrs:{href:"https://data.rbg.vic.gov.au/specify/specifyschema/table/collectingevent",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("Collecting Event")]),n("OutboundLink")],1)]),t._v(" "),n("p",[n("img",{attrs:{src:a(221),alt:"DwC mapping Event"}})]),t._v(" "),n("p",[t._v("No pre-processing is necessary for any of the properties of the "),n("strong",[t._v("Event")]),t._v(" class.\nI concatenate "),n("code",[t._v("eventDateStart")]),t._v(" and "),n("code",[t._v("eventDateEnd")]),t._v(" into "),n("code",[t._v("eventDate")]),t._v(", fix up\n"),n("code",[t._v("eventDate")]),t._v(" for incomplete dates and add "),n("code",[t._v("startDayOfYear")]),t._v(" in post-processing.")]),t._v(" "),n("h3",{attrs:{id:"location"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#location","aria-hidden":"true"}},[t._v("#")]),t._v(" Location")]),t._v(" "),n("p",[n("img",{attrs:{src:"/specify-icon-18px.png",alt:""}}),t._v(" "),n("a",{attrs:{href:"https://data.rbg.vic.gov.au/specify/specifyschema/table/locality",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("Locality")]),n("OutboundLink")],1)]),t._v(" "),n("p",[n("img",{attrs:{src:a(222),alt:"DwC mapping Location"}})]),t._v(" "),n("h4",{attrs:{id:"countrycode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#countrycode","aria-hidden":"true"}},[t._v("#")]),t._v(" countryCode")]),t._v(" "),n("p",[t._v("The Specify "),n("strong",[t._v("Geography")]),t._v(" table has a "),n("code",[t._v("GeographyCode")]),t._v(" column that has the\n"),n("code",[t._v("countryCode")]),t._v(" filled in for countries, but has different values or no value for\nadministrative areas within a country. Therefore, if you map the Specify\n"),n("code",[t._v("GeographyCode")]),t._v(" to the Darwin Core "),n("code",[t._v("countryCode")]),t._v(", you will end up with mostly\n"),n("em",[t._v("NULL")]),t._v(" values.")]),t._v(" "),n("p",[t._v("The following function obtains the "),n("code",[t._v("countryCode")]),t._v(" for administrative areas within\ncountries:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_countrycode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_countrycode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_geography_id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTEGER")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_node_number "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTEGER")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_country_code "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" NodeNumber\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" var_node_number\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" geography\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" GeographyID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("in_geography_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" GeographyCode\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" var_country_code\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" geography\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" NodeNumber"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("var_node_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" HighestChildNodeNumber"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("var_node_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" RankID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" var_country_code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("And this procedure stores the value in "),n("code",[t._v("Text1")]),t._v(" in the "),n("strong",[t._v("Geography")]),t._v(" table:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_countrycode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_countrycode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" geography\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" Text1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dwc_countrycode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GeographyID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" GeographyTreeDefID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" RankID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("This has to be done only once and after that can be manually filled in when new\nareas are added to the database (a very infrequent event for us).")]),t._v(" "),n("h4",{attrs:{id:"minimumelevationinmeters-maximumelevationinmeters-verbatimelevation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minimumelevationinmeters-maximumelevationinmeters-verbatimelevation","aria-hidden":"true"}},[t._v("#")]),t._v(" minimumElevationInMeters, maximumElevationInMeters, verbatimElevation")]),t._v(" "),n("p",[t._v("In Specify you can store altitude in different units and we make use use of\nthat, as we have many historical collections with altitudes given in feet, so we\nhave altitudes in metres and feet. Darwin Core only accepts altitude in metres,\nso we have to convert the ones in feet. We want to deliver the original values\nin feet as "),n("code",[t._v("verbatimElevation")]),t._v(", but do not want to overwrite the verbatim\naltitudes we already have. Therefore, we need fields for\n"),n("code",[t._v("minimumElevationInMeters")]),t._v(", "),n("code",[t._v("maximumElevationInMeters")]),t._v(" and "),n("code",[t._v("verbatimElevation")]),t._v(".\nI have put them in "),n("code",[t._v("Number1")]),t._v(", "),n("code",[t._v("Number2")]),t._v(" and "),n("code",[t._v("Text3")]),t._v(" in the\n"),n("a",{attrs:{href:"https://data.rbg.vic.gov.au/specify/specifyschema/table/locality",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("Locality Detail")]),n("OutboundLink")],1),t._v("\ntable.")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_elevation_terms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_elevation_terms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" locality l\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" localitydetail ld "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" \n      ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ft'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3048")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("Is")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ft'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3048")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" \n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ft'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3048")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VerbatimElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VerbatimElevation\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ft'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" CONCAT_WS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'–'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" localitydetail "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TimestampCreated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimestampModified"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CreatedByAgentID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LocalityID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Number1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Number2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Text3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ft'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3048")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" minimumElevationInMeters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("Is")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ft'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3048")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ft'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3048")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" maximumElevationInMeters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" \n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VerbatimElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VerbatimElevation\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ft'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" \n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" \n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" CONCAT_WS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'–'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxElevation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" VerbatimElevation\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" locality l\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" localitydetail ld "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityDetailID "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" locality l\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" localitydetail ld "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinElevation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" ld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"minimumdepthinmeters-maximumdepthinmeters-verbatimdepth"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minimumdepthinmeters-maximumdepthinmeters-verbatimdepth","aria-hidden":"true"}},[t._v("#")]),t._v(" minimumDepthInMeters, maximumDepthInMeters, verbatimDepth")]),t._v(" "),n("p",[t._v("The situation with the depth fields is like that for the altitude fields, only\nthere is an extra unit, fathoms, and the depth field are already in the\n"),n("strong",[t._v("Locality detail")]),t._v(" table, so it is an easier procedure. I have put\n"),n("code",[t._v("minimumDepthInMeters")]),t._v(", "),n("code",[t._v("maximumDepthInMeters")]),t._v(" and "),n("code",[t._v("verbatimDepth")]),t._v(" in "),n("code",[t._v("Number3")]),t._v(",\n"),n("code",[t._v("Number4")]),t._v(" and "),n("code",[t._v("Text4")]),t._v(" respectively.")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_depth_terms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_dwc_depth_terms"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" localitydetail\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" \n      Number3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" StartDepthUnit "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" StartDepth "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StartDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3048")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StartDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8288")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Number4 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" EndDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" StartDepthUnit "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" StartDepth "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StartDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3048")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StartDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8288")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" StartDepthUnit "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" EndDepth "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EndDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3048")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EndDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8288")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      Text4 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" EndDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" StartDepthUnit\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StartDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' ft'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StartDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' fathoms'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" StartDepthUnit\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StartDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'–'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EndDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' ft'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StartDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'–'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ENDDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' fathoms'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" StartDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" localitydetail\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" Number3"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Number4"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Text4"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" StartDepth "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" Number3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"geo-reference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#geo-reference","aria-hidden":"true"}},[t._v("#")]),t._v(" Geo-reference")]),t._v(" "),n("p",[n("img",{attrs:{src:"/specify-icon-18px.png",alt:""}}),t._v(" "),n("a",{attrs:{href:"https://data.rbg.vic.gov.au/specify/specifyschema/table/geocoorddetail",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("Geo-coord. Detail")]),n("OutboundLink")],1)]),t._v(" "),n("p",[n("img",{attrs:{src:a(223),alt:"DwC mapping georeference"}})]),t._v(" "),n("p",[t._v("Geo-reference data is in the "),n("strong",[t._v("Location")]),t._v(" class in Darwin Core, but the class\nhas too many properties to fit in a single screenshot and Specify has a separate\ntable for at least some of the geo-reference related properties.")]),t._v(" "),n("h4",{attrs:{id:"coordinateuncertaintyinmeters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#coordinateuncertaintyinmeters","aria-hidden":"true"}},[t._v("#")]),t._v(" coordinateUncertaintyInMeters")]),t._v(" "),n("p",[t._v("We – and some other Australian herbaria – have traditionally used a – now\nseeming rather crude – rank system to record coordinate uncertainty:")]),t._v(" "),n("ul",[n("li",[t._v("1: < 50 m")]),t._v(" "),n("li",[t._v("2: 50–1000 m")]),t._v(" "),n("li",[t._v("3: 1000–10000 m")]),t._v(" "),n("li",[t._v("4: 10000–25000 m")]),t._v(" "),n("li",[t._v("5: > 25000 m.")])]),t._v(" "),n("p",[t._v("For modern collections (as in specimens) it is possible to get much more accurate\nuncertainties. We have not quite worked out how to do that well, but we already\nhave the values that GeoLocate stores in the "),n("code",[t._v("MaxUncertaintyEst")]),t._v(" fields that we\nwould like to deliver in preference to what we have been delivering before (the\nupper limit of the classes mentioned above).")]),t._v(" "),n("p",[t._v("The following function returns the upper limit of the given uncertainty class:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("coordinate_uncertainty_in_meters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("coordinate_uncertainty_in_meters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_precision "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" out_uncertainty "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTEGER")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_uncertainty "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" in_precision\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("25000")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" out_uncertainty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("Specify has a "),n("code",[t._v("GeoRefAccuracy")]),t._v(" field, which I think fits the bill. The following\nprocedure will store the value of "),n("code",[t._v("MaxUncertaintyEst")]),t._v(" if it's there and\notherwise the returned value of the function above in that field. As the\n"),n("strong",[t._v("Uncertainty")]),t._v(" ("),n("code",[t._v("OriginalElevationUnit")]),t._v(") field is in the "),n("strong",[t._v("Locality")]),t._v(" table and\nwe will have it for locality records that do not yet have a "),n("strong",[t._v("Geo-coord.\nDetail")]),t._v(" record, new "),n("strong",[t._v("Geo-coord. Detail")]),t._v(" records will need to be created for\nthose records.")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_coordinate_uncertainty_in_meters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_coordinate_uncertainty_in_meters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRANSACTION")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" locality l\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" geocoorddetail gc "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("gc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" gc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GeoRefAccuracy"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxUncertaintyEst "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxUncertaintyEst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" coordinate_uncertainty_in_meters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OriginalElevationUnit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OriginalElevationUnit "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" gc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaxUncertaintyEst "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Latitude1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Longitude1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" geocoorddetail "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TimestampCreated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TimestampModified"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CreatedByAgentID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GeoRefAccuracy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t  coordinate_uncertainty_in_meters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OriginalElevationUnit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" geoRefAccuracy\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" locality l\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" geocoorddetail gc "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("gc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LocalityID\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OriginalElevationUnit "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Latitude1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Longitude1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" gc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GeoCoordDetailID "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"verbatimcoordinatesystem-and-coordinateprecision"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#verbatimcoordinatesystem-and-coordinateprecision","aria-hidden":"true"}},[t._v("#")]),t._v(" verbatimCoordinateSystem and coordinatePrecision")]),t._v(" "),n("p",[t._v("I used to derive "),n("code",[t._v("verbatimCoordinateSystem")]),t._v(" from the "),n("code",[t._v("OriginalLatLongUnit")]),t._v(" field\nin the "),n("strong",[t._v("Locality")]),t._v(" table, but, since we started using Specify 7 we have been\nfinding some incorrect values for "),n("code",[t._v("OriginalLatLongUnit")]),t._v(", so, for the moment,\nI infer "),n("code",[t._v("verbatimCoordinateSystem")]),t._v(" myself from the "),n("code",[t._v("Lat1Text")]),t._v(" and "),n("code",[t._v("Long1Text")]),t._v("\nfields. The obtained value is stored in the "),n("code",[t._v("OriginalCoordSystem")]),t._v(" field in the\n"),n("strong",[t._v("Geo-coord. Detail")]),t._v(" table.")]),t._v(" "),n("p",[t._v("Specify does not have "),n("code",[t._v("coordinatePrecision")]),t._v(", so it is calculated from the\n"),n("code",[t._v("Lat1Text")]),t._v(" and "),n("code",[t._v("Long1Text")]),t._v(" fields. ALA has a (rather senseless) data quality\ntest that fails when the number of decimals of the "),n("code",[t._v("coordinatePrecision")]),t._v(" is\ndifferent from that of "),n("code",[t._v("decimalLatitude")]),t._v(" and "),n("code",[t._v("decimalLongitude")]),t._v(", so we need a\nfield of type Decimal with 10 digits – because that is what "),n("code",[t._v("Latitude1")]),t._v(" and\n"),n("code",[t._v("Longitude1")]),t._v(" have – to store the value. We are using "),n("code",[t._v("NamedPlaceExtent")]),t._v(" in the\n"),n("strong",[t._v("Geo-coord. Detail")]),t._v(" table, which fits the bill and was not used before, but it\nwould be good to have a dedicated field for "),n("code",[t._v("coordinatePrecision")]),t._v(".")]),t._v(" "),n("p",[t._v("The Python code below calculates "),n("code",[t._v("verbatimCoordinateSystem")]),t._v(" and\n"),n("code",[t._v("coordinatePrecision")]),t._v(". As for the calculation of both terms "),n("code",[t._v("Lat1Text")]),t._v(" and\n"),n("code",[t._v("Long1Text")]),t._v(" need to be parsed into degrees, minutes and seconds, which takes up\nabout half of the code, the two terms are taken together here.")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env python3")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("verbatim_coord_system")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lattext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lngtext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    verbatim_coordinate_system "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    lat_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat_sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_sec "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parse_latlng_text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lattext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lngtext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" lat_sec "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" lng_sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        verbatim_coordinate_system "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'degrees minutes decimal seconds'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" lat_min "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" lng_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        verbatim_coordinate_system "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'degrees decimal minutes'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lat_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lng_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        verbatim_coordinate_system "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'decimal degrees'")]),t._v("\n        \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" verbatim_coordinate_system\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("coordinate_precision")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lattext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lngtext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    coordinate_precision "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    lat_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat_sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_sec "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parse_latlng_text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lattext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lngtext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" lat_sec "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" lng_sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        coordinate_precision "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" decimal_precision_latlng"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lat_sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" lat_min "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" lng_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        coordinate_precision "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" decimal_precision_latlng"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lat_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lat_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lng_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        coordinate_precision "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" decimal_precision_latlng"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lat_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" coordinate_precision\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse_latlng_text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lattext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lngtext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    lat_pattern "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('r"^([-+]?\\d*\\.?\\d*)?[d°]? ?(\\d*\\.?\\d*)?\'? ?(\\d*\\.?\\d*)?\\"? ?([NS]{1})?$"')]),t._v("\n    lng_pattern "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('r"^([-+]?\\d*\\.?\\d*)?[d°]? ?(\\d*\\.?\\d*)?\'? ?(\\d*\\.?\\d*)?\\"? ?([EW]{1})?$"')]),t._v("\n    \n    lat_deg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    lat_min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    lat_sec "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    lng_deg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    lng_min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    lng_sec "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    \n    lat_match "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lat_pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lattext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" lat_match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        lat_deg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lat_match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("replace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        lat_min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lat_match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        lat_sec "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lat_match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    lng_match "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lng_pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lngtext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" lng_match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        lng_deg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lng_match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("replace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        lng_min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lng_match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        lng_sec "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lng_match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lat_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat_sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_deg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng_sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("decimal_precision_latlng")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lng"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    dp_lat "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decimal_precision"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    dp_lng "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decimal_precision"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lng"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dp_lat "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dp_lat "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" dp_lng "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" dp_lng\n        \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("decimal_precision")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),n("h3",{attrs:{id:"identification"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#identification","aria-hidden":"true"}},[t._v("#")]),t._v(" Identification")]),t._v(" "),n("p",[n("img",{attrs:{src:"/specify-icon-18px.png",alt:""}}),t._v(" "),n("a",{attrs:{href:"https://data.rbg.vic.gov.au/specify/specifyschema/table/determination",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("Determination")]),n("OutboundLink")],1)]),t._v(" "),n("p",[n("img",{attrs:{src:a(224),alt:"DwC mapping Identification"}})]),t._v(" "),n("h4",{attrs:{id:"identificationqualifier"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#identificationqualifier","aria-hidden":"true"}},[t._v("#")]),t._v(" identificationQualifier")]),t._v(" "),n("p",[t._v("Specify has the "),n("code",[t._v("Qualifier")]),t._v(", "),n("code",[t._v("SubSpQualifier")]),t._v(" and "),n("code",[t._v("VarQualifier")]),t._v(" fields to deal\nwith uncertain determinations. In our implementation we just use the "),n("code",[t._v("Qualifier")]),t._v("\nfield and have a pick list field for the rank that the qualifier applies to on\nthe "),n("code",[t._v("VarQualifier")]),t._v(" field.")]),t._v(" "),n("p",[t._v("The Darwin Core "),n("a",{attrs:{href:"https://dwc.tdwg.org/terms/#dwc:identificationQualifier",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("identificationQualifier")]),n("OutboundLink")],1),t._v("\nis a string that contains the qualifier and all parts of the name that come\nafter it. We use the following function to create the Darwin Core\n"),n("code",[t._v("identificationQualifier")]),t._v(" string from the data in our database:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n* Function creates the Darwin Core identificationQualifier string from elements\n* in the Determination and Taxon tables. The DwC identificationQualifier is the \n* qualifier plus the part of the scientific name that follows it.\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_identification_qualifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_identification_qualifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_qualifier "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" in_rank "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" in_taxonID "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" utf8\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_name "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_rank_id "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" spacer "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RankID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FullName\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" var_rank_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_name\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" taxon t\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TaxonID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("in_taxonID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" in_qualifier "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- number of name elements")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" \n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" var_rank_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("220")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- genus or monomial")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" var_rank_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("220")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- species")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" var_rank_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("220")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- infraspecific taxon")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- qualifier insertion point")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" in_rank\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'family'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- preceding name")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'genus'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--    ,,")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'species'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- preceding first epithet")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'subspecies'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- preceding second epithet")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'variety'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--    ,,")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'forma'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--    ,,")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- by default the qualifier is inserted before the last name element ")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" \n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" ins "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" in_qualifier"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'?'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" spacer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" spacer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- return dwc:identificationQualifier")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" ins\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_qualifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" spacer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CONCAT_WS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_qualifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" spacer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CONCAT_WS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_qualifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" spacer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CONCAT_WS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n* Function splits the input string (str) on a delimiter (del) and returns the\n* bit indicated by the third parameter (i).\n* http://stackoverflow.com/questions/14950466/how-to-split-the-name-string-in-mysql#answer-26491403\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("split_string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" del "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" utf8\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LENGTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" LENGTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" del"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" SUBSTRING_INDEX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTRING_INDEX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" del"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" del "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("The value that is returned by this function is stored in the "),n("code",[t._v("Text1")]),t._v(" field:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" update_dwc_identification_qualifier $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" update_dwc_identification_qualifier "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" determination\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" Text1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dwc_identification_qualifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Qualifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" VarQualifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TaxonID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Qualifier "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" TaxonID "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"typestatus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#typestatus","aria-hidden":"true"}},[t._v("#")]),t._v(" typeStatus")]),t._v(" "),n("p",[t._v("Specify deals with nomenclatural type designations as determinations, so so do\nwe. We have a determination type – in the "),n("code",[t._v("FeatureOrBasis")]),t._v(" field – 'Type\nstatus' to indicate that a determination is really a nomenclatural type status\ndesignation. As, in our implementation, 'Type status' determinations are never\ncurrent determinations, they will be excluded from the Darwin Core Occurrence\nCore mapping, because in the query underlying the mapping "),n("code",[t._v("Is Current")]),t._v(" will be\nset to 'Yes'. Also, the Darwin Core "),n("code",[t._v("typeStatus")]),t._v(" is different from the Specify\n"),n("code",[t._v("Type Status")]),t._v(" in that, apart from the type of type, it also contains the\ntypified name and, optionally, other information. Therefore we store the Darwin\nCore "),n("code",[t._v("typeStatus")]),t._v(" in a field in the "),n("strong",[t._v("Collection Object")]),t._v(" table.")]),t._v(" "),n("p",[t._v("The following function compiles the Darwin Core "),n("code",[t._v("typeStatus")]),t._v(" string:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n* Function checks if a collection object is a type and, if so, concatenates the\n* Darwin Core typeStatus string from values of fields in the Determination and \n* Taxon tables. \n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_type_status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dwc_type_status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("colobjid "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" utf8\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_typeOfType "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_scientificName "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_author "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_protologue "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_year "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" str "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TypeStatusName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FullName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Author"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommonName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Number2\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" var_typeOfType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_scientificName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_author"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_protologue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_year\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" determination d\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" taxon t "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TaxonID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TaxonID\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("colobjid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TypeStatusName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("YesNo1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- exclude type status designations with qualifiers and authentic specimens")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- for invalid names")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SubspQualifier "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TypeStatusName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Authentic specimen'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_typeOfType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CONCAT_WS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_typeOfType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'of'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_scientificName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_author"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" var_protologue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" var_year "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" str "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CONCAT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_protologue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' ('")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" var_year"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" str"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("This procedure stores the returned value in the "),n("code",[t._v("Description")]),t._v(" field in the\n"),n("strong",[t._v("Collection Object")]),t._v(" table:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" update_dwc_type_status $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" update_dwc_type_status "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" collectionobject\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" Description"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dwc_type_status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CollectionObjectID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" CollectionObjectID "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" CollectionObjectID\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" determination\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" TypeStatusName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" YesNo1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" SubspQualifier "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" TypeStatusName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Authentic specimen'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" collectionobject\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" Description"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" CollectionObjectID "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" CollectionObjectID\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" determination\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" TypeStatusName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" YesNo1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" SubspQualifier "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" TypeStatusName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Authentic specimen'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"taxon"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#taxon","aria-hidden":"true"}},[t._v("#")]),t._v(" Taxon")]),t._v(" "),n("p",[n("img",{attrs:{src:"/specify-icon-18px.png",alt:""}}),t._v(" "),n("a",{attrs:{href:"https://data.rbg.vic.gov.au/specify/specifyschema/table/taxon",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("Taxon")]),n("OutboundLink")],1)]),t._v(" "),n("p",[n("img",{attrs:{src:a(225),alt:"DwC mapping Taxon"}})]),t._v(" "),n("h4",{attrs:{id:"infraspecificepithet"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#infraspecificepithet","aria-hidden":"true"}},[t._v("#")]),t._v(" infraspecificEpithet")]),t._v(" "),n("p",[t._v("Because we are a herbarium we have to deal with multiple infraspecific ranks.\nThe Specify query provides subspecies, variety etc., but not a single\ninfraspecific epithet. So we have to store it somewhere ourselves.")]),t._v(" "),n("p",[t._v("We have been doing this for years with a trigger, which I will not show, as the\nuse of triggers is frowned upon by the Specify Collections Consortium, but it\ndoes something like this:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" taxon "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" Text5"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" RankID"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("220")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"post-processing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#post-processing","aria-hidden":"true"}},[t._v("#")]),t._v(" Post-processing")]),t._v(" "),n("p",[t._v("The following query is used for the "),n("strong",[t._v("Occurrence Core")]),t._v(" in the IPT:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("occurrenceID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Record Level Terms")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PhysicalObject'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  modified"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://creativecommons.org/licenses/by/4.0/legalcode'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" license"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Royal Botanic Gardens Board'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" rightsHolder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("institutionCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collectionCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PreservedSpecimen'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" basisOfRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Occurrence")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("catalogNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("occurrenceRemarks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("recordNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("recordedBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'; '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" recordedBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ai"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("recordedByID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reproductiveCondition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("establishmentMeans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'present'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" occurrenceStatus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("preparations"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'; '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" preparations"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("associatedSequences"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' | '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" associatedSequences"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- associatedTaxa,")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Organism")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- previousIdentifications,")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Event")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentEventID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  CONCAT_WS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ipt_iso_date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventDateStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ipt_iso_date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventDateEnd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" eventDate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventDateEnd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ipt_startDayOfYear"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eventDateStart"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" startDayOfYear"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbatimEventDate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("habitat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Location")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locationID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("waterBody"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("islandGroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("island"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("country"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("countryCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateProvince"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("county"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbatimLocality "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" locality"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbatimLocality"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbatimElevation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minimumElevationInMeters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maximumElevationInMeters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbatimDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minimumDepthInMeters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maximumDepthInMeters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decimalLatitude "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbatimLatitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" verbatimLatitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbatimLongitude "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbatimLongitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" verbatimLongitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verbatimCoordinateSystem"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  srs_from_datum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("geodeticDatum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" verbatimSRS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decimalLatitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decimalLongitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  srs_from_datum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("geodeticDatum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" geodeticDatum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coordinateUncertaintyInMeters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ROUND")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coordinatePrecision"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" coordinatePrecision"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("georeferencedBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("georeferencedDate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("georeferenceProtocol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("georeferenceSources"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("georeferenceVerificationStatus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("georeferenceRemarks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Identification")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("identificationID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("identifiedBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'; '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" identifiedBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ai"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("identifiedByID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dateIdentified"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("identificationRemarks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("identificationQualifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("typeStatus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Taxon")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scientificName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kingdom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phylum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("family"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("genus"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("specificEpithet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("taxonRank"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scientificNameAuthorship"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("taxonRemarks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ICN'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" nomenclaturalCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nomenclaturalStatus\n  \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" mel_avh_occurrence_core m\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" mel_avh_occurrence_core_agent_id ai "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mel_avh_occurrence_coreId"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ai"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CollectionObjectID\n")])])]),n("h4",{attrs:{id:"default-values"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#default-values","aria-hidden":"true"}},[t._v("#")]),t._v(" Default values")]),t._v(" "),n("p",[t._v("Many terms have the same value for every record in the data set. Currently, the\nALA ingestion pipeline does not honour the defaults set in the "),n("code",[t._v("meta.xml")]),t._v(" file\nof the Darwin Core Archive. You can set default values elsewhere, but I prefer\nto have everything in the data.")]),t._v(" "),n("h4",{attrs:{id:"aggregated-terms"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aggregated-terms","aria-hidden":"true"}},[t._v("#")]),t._v(" Aggregated terms")]),t._v(" "),n("p",[t._v("We prefer to use a semicolon as the separator in aggregated values, but Darwin\nCore recommends pipes, so I replace the semicolons with pipes.")]),t._v(" "),n("h4",{attrs:{id:"incomplete-dates"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#incomplete-dates","aria-hidden":"true"}},[t._v("#")]),t._v(" Incomplete dates")]),t._v(" "),n("p",[t._v("The Specify Data Exporter leaves in the '-00' for incomplete dates, which makes\nthem invalid ISO dates and makes the IPT throw a tantrum. The following function\nstrips the '-00' of incomplete dates:")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("ipt_iso_date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v(" $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("ipt_iso_date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_date "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" utf8\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" $$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"eventdate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eventdate","aria-hidden":"true"}},[t._v("#")]),t._v(" eventDate")]),t._v(" "),n("p",[t._v("We concatenate "),n("code",[t._v("eventDateStart")]),t._v(" and "),n("code",[t._v("eventDateEnd")]),t._v(" with\n"),n("code",[t._v("CONCAT_WS('/', ipt_iso_date(m.eventDateStart, m.eventDateEnd)")]),t._v(".")]),t._v(" "),n("h4",{attrs:{id:"startdayofyear"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#startdayofyear","aria-hidden":"true"}},[t._v("#")]),t._v(" startDayOfYear")]),t._v(" "),n("p",[t._v("I am not sure how useful "),n("code",[t._v("startDayOfYear")]),t._v(" is, but I can imagine a use for it in\nphenology studies and it is calculated easily enough from the "),n("code",[t._v("eventDate")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("ipt_startDayOfYear"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("ipt_startDayOfYear"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_date "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" var_iso_date "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" var_iso_date"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ipt_iso_date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" LENGTH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_iso_date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" DAYOFYEAR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("var_iso_date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"verbatimlatitude-verbatimlongitude"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#verbatimlatitude-verbatimlongitude","aria-hidden":"true"}},[t._v("#")]),t._v(" verbatimLatitude, verbatimLongitude")]),t._v(" "),n("p",[t._v("Specify often puts '0° S' in "),n("code",[t._v("Lat1Text")]),t._v(" when there is no latitude and\nlongitude, which is harmless, but does not look so good if it ends up in a data\nset, so we only deliver a value for "),n("code",[t._v("verbatimLatitude")]),t._v(" and "),n("code",[t._v("verbatimLongitude")]),t._v("\nif we also have "),n("code",[t._v("decimalLatitude")]),t._v(" and "),n("code",[t._v("decimalLongitude")]),t._v(".")]),t._v(" "),n("h4",{attrs:{id:"verbatimsrs-geodeticdatum"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#verbatimsrs-geodeticdatum","aria-hidden":"true"}},[t._v("#")]),t._v(" verbatimSRS, geodeticDatum")]),t._v(" "),n("p",[t._v("We have datums in our database, but Darwin Core recommends Spatial Reference\nSystem (SRS). You could map the values in the IPT, but then you would have to\nverify that the mapping is still there every time you change something in the\nIPT and, moreover, you would have to do it twice. So I do it in the query.")]),t._v(" "),n("div",{staticClass:"language-sql extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("srs_from_datum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("melisr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("$$\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("srs_from_datum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in_datum "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARSET")]),t._v(" utf8\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" out_srs "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" out_srs "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" in_datum\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WGS84'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'epsg:4326'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GDA94'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'epsg:4283'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AGD84'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'epsg:4203'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AGD66'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'epsg:4202'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Minna'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'epsg:4263'")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"coordinateprecision"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#coordinateprecision","aria-hidden":"true"}},[t._v("#")]),t._v(" coordinatePrecision")]),t._v(" "),n("p",[t._v("While "),n("code",[t._v("Latitude1")]),t._v(" and "),n("code",[t._v("Longitude1")]),t._v(" are stored with ten decimal places, the\nexported values only have seven. Therefore, we round the values of\n"),n("code",[t._v("coordinatePrecision")]),t._v(" to seven decimal places as well in order to try and pass\nthe 'Coordinate precision not valid' test in ALA.")]),t._v(" "),n("h4",{attrs:{id:"recordedbyid-identifiedbyid"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#recordedbyid-identifiedbyid","aria-hidden":"true"}},[t._v("#")]),t._v(" recordedByID, identifiedByID")]),t._v(" "),n("p",[t._v("I will explain later.")])])},[],!1,null,null,null);s.default=e.exports}}]);